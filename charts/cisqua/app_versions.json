{
    "1.0.3": {
        "healthy": true,
        "supported": true,
        "healthy_error": null,
        "location": "/Users/vsi/Projects/scale_apps/charts/cisqua/1.0.3",
        "last_update": "2024-03-31 16:27:18",
        "required_features": [
            "definitions/timezone"
        ],
        "human_version": "1.0.0_1.0.3",
        "version": "1.0.3",
        "chart_metadata": {
            "apiVersion": "v2",
            "name": "cisqua",
            "description": "Cisqua is an AniDB client and library management system",
            "type": "application",
            "version": "1.0.3",
            "appVersion": "1.0.0",
            "home": "https://github.com/pathsny/cisqua",
            "icon": "https://github.com/pathsny/scale_apps/blob/1212c1356f1ec8e7fda845867e2fa4fceb434d9a/charts/cisqua/1.0.0/cisqua.png",
            "sources": [
                "https://github.com/pathsny/cisqua"
            ],
            "keywords": [
                "media"
            ]
        },
        "app_metadata": null,
        "schema": {
            "groups": [
                {
                    "name": "General Settings",
                    "description": "General Deployment Settings"
                },
                {
                    "name": "Networking Configuration",
                    "description": "Configure Network and Services for Container"
                },
                {
                    "name": "Storage Configuration",
                    "description": "Persist and Share Data that is Separate from the Container"
                },
                {
                    "name": "User and Group Configuration",
                    "description": "Configure User and Group Information"
                },
                {
                    "name": "Resources Configuration",
                    "description": "Specify Resources/Devices to be Allocated to Workload"
                }
            ],
            "questions": [
                {
                    "variable": "general",
                    "group": "General Settings",
                    "label": "",
                    "description": "General Settings",
                    "schema": {
                        "type": "dict",
                        "attrs": [
                            {
                                "variable": "TZ",
                                "label": "Timezone",
                                "group": "General Settings",
                                "schema": {
                                    "type": "string",
                                    "default": "America/Los_Angeles",
                                    "$ref": [
                                        "definitions/timezone"
                                    ],
                                    "enum": [
                                        {
                                            "value": "Asia/Damascus",
                                            "description": "'Asia/Damascus' timezone"
                                        },
                                        {
                                            "value": "Asia/Saigon",
                                            "description": "'Asia/Saigon' timezone"
                                        }
                                    ]
                                }
                            },
                            {
                                "variable": "appEnvironment",
                                "label": "Application Environment",
                                "description": "Whether the app is running in Development or Production Mode",
                                "schema": {
                                    "type": "string",
                                    "default": "production",
                                    "enum": [
                                        {
                                            "value": "production",
                                            "description": "production"
                                        },
                                        {
                                            "value": "development",
                                            "description": "development"
                                        }
                                    ]
                                }
                            },
                            {
                                "variable": "envList",
                                "label": "Extra Environment Variables",
                                "description": "Please be aware that some variables are set in the background, adding duplicates here might cause issues or prevent the app from starting...",
                                "schema": {
                                    "type": "list",
                                    "default": [],
                                    "items": [
                                        {
                                            "variable": "envItem",
                                            "label": "Environment Variable",
                                            "schema": {
                                                "additional_attrs": true,
                                                "type": "dict",
                                                "attrs": [
                                                    {
                                                        "variable": "name",
                                                        "label": "Name",
                                                        "schema": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    {
                                                        "variable": "value",
                                                        "label": "Value",
                                                        "schema": {
                                                            "type": "string"
                                                        }
                                                    }
                                                ]
                                            }
                                        }
                                    ]
                                }
                            }
                        ]
                    }
                },
                {
                    "variable": "network",
                    "label": "",
                    "group": "Networking Configuration",
                    "schema": {
                        "type": "dict",
                        "attrs": [
                            {
                                "variable": "webPort",
                                "label": "Web Port",
                                "description": "The port for the Cisqua Web UI.",
                                "schema": {
                                    "type": "int",
                                    "min": 1,
                                    "max": 65535,
                                    "default": 4567,
                                    "required": true
                                }
                            }
                        ]
                    }
                },
                {
                    "variable": "storage",
                    "label": "",
                    "group": "Storage Configuration",
                    "schema": {
                        "type": "dict",
                        "attrs": [
                            {
                                "variable": "appDataVolume",
                                "label": "App Data Storage",
                                "description": "The location where app data is stored. Includes configuration.",
                                "schema": {
                                    "required": true,
                                    "immutable": true,
                                    "type": "hostpath"
                                }
                            },
                            {
                                "variable": "additionalStorages",
                                "label": "Additional Storage",
                                "description": "The location where app data is stored. Includes configuration.",
                                "schema": {
                                    "type": "list",
                                    "default": [],
                                    "items": [
                                        {
                                            "variable": "storageEntry",
                                            "label": "Storage Entry",
                                            "schema": {
                                                "type": "dict",
                                                "attrs": [
                                                    {
                                                        "variable": "readOnly",
                                                        "label": "Read Only",
                                                        "description": "Mount the volume as read only.",
                                                        "schema": {
                                                            "type": "boolean",
                                                            "default": false
                                                        }
                                                    },
                                                    {
                                                        "variable": "hostPath",
                                                        "label": "The host path to use for storage.",
                                                        "schema": {
                                                            "type": "hostpath",
                                                            "required": true
                                                        }
                                                    },
                                                    {
                                                        "variable": "mountPath",
                                                        "label": "Mount Path",
                                                        "description": "The path inside the container to mount the storage.",
                                                        "schema": {
                                                            "type": "path",
                                                            "required": true
                                                        }
                                                    }
                                                ]
                                            }
                                        }
                                    ]
                                }
                            }
                        ]
                    }
                },
                {
                    "variable": "userAndGroup",
                    "group": "User and Group Configuration",
                    "label": "",
                    "schema": {
                        "additional_attrs": true,
                        "type": "dict",
                        "attrs": [
                            {
                                "variable": "container",
                                "label": "Container",
                                "schema": {
                                    "additional_attrs": true,
                                    "type": "dict",
                                    "attrs": [
                                        {
                                            "variable": "runAsUser",
                                            "label": "runAsUser",
                                            "description": "The UserID of the user running the application",
                                            "schema": {
                                                "type": "int"
                                            }
                                        },
                                        {
                                            "variable": "runAsGroup",
                                            "label": "runAsGroup",
                                            "description": "The groupID of the user running the application",
                                            "schema": {
                                                "type": "int"
                                            }
                                        },
                                        {
                                            "variable": "fsGroup",
                                            "label": "fsGroup",
                                            "description": "The group ID that should own all storage",
                                            "schema": {
                                                "type": "int"
                                            }
                                        },
                                        {
                                            "variable": "UMASK",
                                            "label": "UMASK",
                                            "description": "When supported by the container, this sets the UMASK for the App. Not supported by all Apps",
                                            "schema": {
                                                "type": "string",
                                                "default": "0022"
                                            }
                                        }
                                    ]
                                }
                            }
                        ]
                    }
                },
                {
                    "variable": "resources",
                    "group": "Resources Configuration",
                    "label": "Resource Limits",
                    "schema": {
                        "additional_attrs": true,
                        "type": "dict",
                        "attrs": [
                            {
                                "variable": "limits",
                                "label": "Advanced Limit Resource Consumption",
                                "schema": {
                                    "additional_attrs": true,
                                    "type": "dict",
                                    "attrs": [
                                        {
                                            "variable": "cpu",
                                            "label": "CPU",
                                            "description": "1000m means 1 hyperthread. Detailed info: https://truecharts.org/manual/SCALE/validation",
                                            "schema": {
                                                "type": "string",
                                                "default": "4000m",
                                                "valid_chars": "^(?!^0(\\.0|m|)$)([0-9]+)(\\.[0-9]|m?)$"
                                            }
                                        },
                                        {
                                            "variable": "memory",
                                            "label": "RAM",
                                            "description": "1Gi means 1 Gibibyte RAM. Detailed info: https://truecharts.org/manual/SCALE/validation",
                                            "schema": {
                                                "type": "string",
                                                "default": "8Gi",
                                                "valid_chars": "^(?!^0(e[0-9]|[EPTGMK]i?|)$)([0-9]+)(|[EPTGMK]i?|e[0-9]+)$"
                                            }
                                        }
                                    ]
                                }
                            },
                            {
                                "variable": "requests",
                                "label": "Minimum Resources Required (request)",
                                "schema": {
                                    "additional_attrs": true,
                                    "type": "dict",
                                    "hidden": true,
                                    "attrs": [
                                        {
                                            "variable": "cpu",
                                            "label": "CPU",
                                            "description": "1000m means 1 hyperthread. Detailed info: https://truecharts.org/manual/SCALE/validation",
                                            "schema": {
                                                "type": "string",
                                                "default": "10m",
                                                "hidden": true,
                                                "valid_chars": "^(?!^0(\\.0|m|)$)([0-9]+)(\\.[0-9]|m?)$"
                                            }
                                        },
                                        {
                                            "variable": "memory",
                                            "label": "RAM",
                                            "description": "1Gi means 1 Gibibyte RAM. Detailed info: https://truecharts.org/manual/SCALE/validation",
                                            "schema": {
                                                "type": "string",
                                                "default": "50Mi",
                                                "hidden": true,
                                                "valid_chars": "^(?!^0(e[0-9]|[EPTGMK]i?|)$)([0-9]+)(|[EPTGMK]i?|e[0-9]+)$"
                                            }
                                        }
                                    ]
                                }
                            }
                        ]
                    }
                }
            ]
        },
        "app_readme": "<h1>Cisqua</h1>\n<p>Cisqua is a powerful and intuitive AniDB client and local anime library management tool. With Cisqua, users can effortlessly search, organize, and track their anime series with data directly sourced from AniDB, ensuring a rich and up-to-date repository of anime information.</p>\n<h2>Key Features</h2>\n<ul>\n<li><strong>AniDB Integration</strong>: Seamlessly search for and retrieve detailed information on anime series, characters, and creators.</li>\n<li><strong>Library Management</strong>: Organize your anime collection with comprehensive library management tools.</li>\n<li><strong>User-friendly Interface</strong>: A clean and intuitive interface designed for ease of use, allowing for quick navigation and management of your anime library.</li>\n<li><strong>Customizable Settings</strong>: Tailor Cisqua to fit your personal preferences with customizable settings.</li>\n</ul>\n<h2>Quick Start</h2>\n<p>To get started with Cisqua in your Kubernetes cluster, you can deploy it using the provided Helm chart. This chart is specifically designed for Truenas Scale.</p>\n<p>To test it locally, you need a local deployment of Kubernetes (such as the one provided by Docker Desktop.)\n<code>helm repo add scale-apps https://github.com/pathsny/scale-apps\n  helm install cisqua scale-apps/cisqua\n  kubectl port-forward svc/cisqua 4567:4567</code></p>\n<p>Then, navigate to http://localhost:4567 in your web browser.</p>\n<h2>Contributing</h2>\n<p>Contributions to Cisqua are always welcome, whether it's reporting issues, submitting improvements, or adding new features. Please visit <a href=\"https://github.com/pathsny/cisqua\">Cisqua's GitHub repository</a> to get involved.</p>\n<h2>Support</h2>\n<p>If you encounter any issues or require assistance, please open an issue on the <a href=\"https://github.com/pathsny/cisqua/issues\">GitHub issue tracker</a>.</p>\n<h2>License</h2>\n<p>Cisqua is open-sourced software licensed under the <a href=\"https://opensource.org/license/mit\">MIT license</a>.</p>",
        "detailed_readme": "<h1>Cisqua</h1>\n<p>Cisqua is a powerful and intuitive AniDB client and local anime library management tool. With Cisqua, users can effortlessly search, organize, and track their anime series with data directly sourced from AniDB, ensuring a rich and up-to-date repository of anime information.</p>\n<h2>Key Features</h2>\n<ul>\n<li><strong>AniDB Integration</strong>: Seamlessly search for and retrieve detailed information on anime series, characters, and creators.</li>\n<li><strong>Library Management</strong>: Organize your anime collection with comprehensive library management tools.</li>\n<li><strong>User-friendly Interface</strong>: A clean and intuitive interface designed for ease of use, allowing for quick navigation and management of your anime library.</li>\n<li><strong>Customizable Settings</strong>: Tailor Cisqua to fit your personal preferences with customizable settings.</li>\n</ul>\n<h2>Quick Start</h2>\n<p>To get started with Cisqua in your Kubernetes cluster, you can deploy it using the provided Helm chart. This chart is specifically designed for Truenas Scale.</p>\n<p>To test it locally, you need a local deployment of Kubernetes (such as the one provided by Docker Desktop.)\n<code>helm repo add scale-apps https://github.com/pathsny/scale-apps\n  helm install cisqua scale-apps/cisqua\n  kubectl port-forward svc/cisqua 4567:4567</code></p>\n<p>Then, navigate to http://localhost:4567 in your web browser.</p>\n<h2>Contributing</h2>\n<p>Contributions to Cisqua are always welcome, whether it's reporting issues, submitting improvements, or adding new features. Please visit <a href=\"https://github.com/pathsny/cisqua\">Cisqua's GitHub repository</a> to get involved.</p>\n<h2>Support</h2>\n<p>If you encounter any issues or require assistance, please open an issue on the <a href=\"https://github.com/pathsny/cisqua/issues\">GitHub issue tracker</a>.</p>\n<h2>License</h2>\n<p>Cisqua is open-sourced software licensed under the <a href=\"https://opensource.org/license/mit\">MIT license</a>.</p>",
        "changelog": null
    }
}